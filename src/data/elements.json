[
  {
    "symbol": "¬",
    "id": "logical-not-flat",
    "name": "Logical NOT (Flat)",
    "arity": 1,
    "keywords": ["logical", "not", "flat", "nonvectorizing"],
    "tags": ["logical", "non-vectorizing"],
    "tagline": "`(a: any) → not a`",
    "description": ""
  },
  {
    "symbol": "∧",
    "id": "logical-and-flat",
    "name": "Logical AND (Flat)",
    "arity": 2,
    "keywords": ["logical", "and", "flat", "nonvectorizing"],
    "tags": ["logical", "non-vectorizing"],
    "tagline": "`(a: any, b: any) → a and b`",
    "description": "If `a` is truthy, then return `b`; otherwise, return `a`."
  },
  {
    "symbol": "⟑",
    "id": "logical-and-reversed-flat",
    "name": "Logical AND (Reversed, Flat)",
    "arity": 2,
    "keywords": ["logical", "and", "flat", "nonvectorizing", "reversed"],
    "tags": ["logical", "non-vectorizing"],
    "tagline": "`(a: any, b: any) → b and a`",
    "description": "If `b` is truthy, then return `a`; otherwise, return `b`."
  },
  {
    "symbol": "∨",
    "id": "logical-or-flat",
    "name": "Logical OR (Flat)",
    "arity": 2,
    "keywords": ["logical", "or", "flat", "nonvectorizing"],
    "tags": ["logical", "non-vectorizing"],
    "tagline": "`(a: any, b: any) → a or b`",
    "description": "If `a` is truthy, then return `a`; otherwise, return `b`."
  },
  {
    "symbol": "ki",
    "id": "kc-pi",
    "name": "pi",
    "arity": 0,
    "keywords": ["pi"],
    "tags": ["constant", "math", "number"],
    "tagline": "pi (`3.1415926`).",
    "description": "The mathematical constant pi."
  },
  {
    "symbol": "Ṙ",
    "id": "reverse",
    "name": "Reverse",
    "arity": 1,
    "keywords": ["reverse", "flip"],
    "tags": ["array"],
    "tagline": "Reverse a list.",
    "description": ""
  },
  {
    "symbol": "øD",
    "id": "null-dict-compress",
    "name": "dict-compress",
    "arity": 1,
    "keywords": ["dictionary", "compress"],
    "tags": ["compression", "string"],
    "tagline": "Dictionary compression",
    "description": "Optimally compress a string of English using words from the Vyxal dictionary."
  }
]
